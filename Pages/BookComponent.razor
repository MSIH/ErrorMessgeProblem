@using static ErrorMessgeProblem.Pages.Home

@if (book == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Context="editFormComponent" OnValidSubmit="@HandleValidSubmit" Model="@book">
        <DataAnnotationsValidator />
        <h4>Validation Summary</h4>
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" class="form-control" @bind-Value="@book.Title" />
            <h5>Validation Message book.Title</h5>
            <ValidationMessage For="@(() => book.Title)" />
        </div>

        <hr />
        <div class="row mb-3">
            <div class="col">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </EditForm>
}
@code {
    private BookModel book;
    private EditContext editFormComponent;

    protected override void OnInitialized()
    {
        book = new BookModel();
        editFormComponent = new EditContext(book);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            editFormComponent.Validate();
        }
    }

    private void HandleValueChanged(ChangeEventArgs e, string propertyName)
    {
        var value = e.Value as string;
        var property = book?.GetType().GetProperty(propertyName);
        if (property?.GetValue(book) as string != value)
        {
            if (property.PropertyType == typeof(string))
            {
                property?.SetValue(book, value);
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        // Handle valid form submission
    }

}
